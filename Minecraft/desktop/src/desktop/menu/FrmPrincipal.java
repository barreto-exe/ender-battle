package desktop.menu;

import game.tools.Sonido;
import comunicacion.PaqueteOperacion;
import basedatos.DBUsuario;
import basedatos.DBPartida;
import basedatos.DBOperacion;
import java.net.*;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JPanel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import comunicacion.*;
import comunicacion.MetodosSocket;
import comunicacion.MetodosSocket.UsesSocket;
import comunicacion.PaqueteOperacion.Operacion;
import comunicacion.PaqueteOperacion.ResultadoOperacion;
import desktop.game.FrmGame;
import game.tools.Constant;
import java.awt.Component;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.HashMap;
import javax.swing.JEditorPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.rtf.RTFEditorKit;

/**
 *
 * @author luisb
 */
public final class FrmPrincipal extends javax.swing.JFrame implements UsesSocket
{
    /**
     * Objeto que contiene los datos del usuario que ha iniciado sesión.
     */
    private DBUsuario usuarioLogueado;

    /**
     * Objeto que contiene los datos de la partida a la que se ha unido el
     * jugador.
     */
    private DBPartida partida;

    /**
     * La ventana que contiene al juego.
     */
    private FrmGame ventanaJuego;

    /**
     * El color de personaje que seleccionó el jugador. || 0 - NORMAL || 1 -
     * ROJO || 2 - VERDE || 3 - AMARILLO || 4 - MORADO || 5 - GRIS ||
     */
    private int personajeSeleccionado;

    /**
     * Hilo en donde se consulta en bucle al servidor sobre el estado de la
     * partida
     */
    Thread hiloEstadoPartida;

    /**
     * Crea la ventana principal del juego.
     */
    public FrmPrincipal()
    {
        super("Minecraft: La Batalla del Ender");
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        partida = new DBPartida();
        ventanaJuego = new FrmGame(null);

        //Cargar manuales
        cargarRTF(txtManualCrearUsuario, "CrearUsuario");
        cargarRTF(txtManualCrearPartida, "CrearPartida");
        cargarRTF(txtManualUnirsePartida, "UnirsePartida");
        cargarRTF(txtAcercaDe, "AcercaDe");
        cargarRTF(txtManualJuego, "Juego");

        limpiarPanelPartidas();
        limpiarTextBoxes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jlpPrincipal = new javax.swing.JLayeredPane();
        panelBienvenida = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        btnIniciarSesion = new javax.swing.JButton();
        btnRegistrar = new javax.swing.JButton();
        btnEstadisticas = new javax.swing.JButton();
        btnAcerca = new javax.swing.JButton();
        btnAyuda = new javax.swing.JButton();
        logo = new javax.swing.JLabel();
        fondoBienvenida = new javax.swing.JLabel();
        panelIniciar = new javax.swing.JPanel();
        logo1 = new javax.swing.JLabel();
        lblUsuario1 = new javax.swing.JLabel();
        txtUsuarioIniciar = new javax.swing.JTextField();
        lblPass2 = new javax.swing.JLabel();
        txtPassIniciar = new javax.swing.JPasswordField();
        btnAceptarInicio = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();
        fondoIniciar = new javax.swing.JLabel();
        panelRegistrarse = new javax.swing.JPanel();
        lblCorreo = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        lblUsuario = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        lblPass = new javax.swing.JLabel();
        txtPass = new javax.swing.JPasswordField();
        lblPass1 = new javax.swing.JLabel();
        txtPassConfirmar = new javax.swing.JPasswordField();
        btnAceptarRegistro = new javax.swing.JButton();
        btnVolver1 = new javax.swing.JButton();
        fondoRegistrarse = new javax.swing.JLabel();
        panelAyuda = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpJuego = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlListaManualesJuego = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtManualJuego = new javax.swing.JEditorPane();
        jpCrearUsuario = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtManualCrearUsuario = new javax.swing.JEditorPane();
        jpCrearPartida = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtManualCrearPartida = new javax.swing.JEditorPane();
        jpUnirsePartida = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtManualUnirsePartida = new javax.swing.JEditorPane();
        btnVolver2 = new javax.swing.JButton();
        fondoAyuda = new javax.swing.JLabel();
        panelAcercaDe = new javax.swing.JPanel();
        btnVolver3 = new javax.swing.JButton();
        btnCambiarServidor = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        txtAcercaDe = new javax.swing.JEditorPane();
        logo2 = new javax.swing.JLabel();
        fondoAcerca = new javax.swing.JLabel();
        panelPartida = new javax.swing.JPanel();
        lblFlechaIzquierda = new javax.swing.JLabel();
        lblFlechaDerecha = new javax.swing.JLabel();
        lblPersonaje = new javax.swing.JLabel();
        logo3 = new javax.swing.JLabel();
        lblNickname = new javax.swing.JLabel();
        jtPartidas = new javax.swing.JTabbedPane();
        jpCrear = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombrePartida = new javax.swing.JTextField();
        txtDescPartida = new javax.swing.JTextField();
        spinCantJugadores = new javax.swing.JSpinner();
        btnCrearPartida = new javax.swing.JButton();
        jpUnirse = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtPartidasActivas = new javax.swing.JTable();
        btnUnirsePartida = new javax.swing.JButton();
        btnActualizarPartidas = new javax.swing.JButton();
        jpLobby = new javax.swing.JPanel();
        lblNombrePartida = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtJugadores = new javax.swing.JTable();
        btnComenzarPartida = new javax.swing.JButton();
        btnCancelarPartida = new javax.swing.JButton();
        fondoAcerca1 = new javax.swing.JLabel();
        panelEstadisticas = new javax.swing.JPanel();
        txtUsuarioEstadisticas = new javax.swing.JTextField();
        btnConsultarEstadisticas = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        lblEstNombreUsuario = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        lblPartidasJugadas = new javax.swing.JLabel();
        lblMonstruosMatados = new javax.swing.JLabel();
        lblObjetosRecogidos = new javax.swing.JLabel();
        lblPartidasGanadas = new javax.swing.JLabel();
        lblJefesMatados = new javax.swing.JLabel();
        lblEsmeraldasRecogidas = new javax.swing.JLabel();
        lblColorFavorito = new javax.swing.JLabel();
        lblAnimalesMatados = new javax.swing.JLabel();
        lblPartidasPerdidas = new javax.swing.JLabel();
        btnVolver4 = new javax.swing.JButton();
        fondoEstadisticas = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jlpPrincipal.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        jlpPrincipal.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        jlpPrincipal.setLayout(new java.awt.CardLayout());

        panelBienvenida.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelBienvenida.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelBienvenida.setLayout(null);

        jButton1.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jButton1.setText("DEBUG");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        panelBienvenida.add(jButton1);
        jButton1.setBounds(590, 10, 100, 40);

        btnIniciarSesion.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnIniciarSesion.setText("INICIAR SESIÓN");
        btnIniciarSesion.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnIniciarSesionActionPerformed(evt);
            }
        });
        panelBienvenida.add(btnIniciarSesion);
        btnIniciarSesion.setBounds(10, 420, 170, 40);

        btnRegistrar.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnRegistrar.setText("REGISTRARSE");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnRegistrarActionPerformed(evt);
            }
        });
        panelBienvenida.add(btnRegistrar);
        btnRegistrar.setBounds(190, 420, 170, 40);

        btnEstadisticas.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnEstadisticas.setText("ESTADÍSTICAS");
        btnEstadisticas.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnEstadisticasActionPerformed(evt);
            }
        });
        panelBienvenida.add(btnEstadisticas);
        btnEstadisticas.setBounds(370, 420, 170, 40);

        btnAcerca.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnAcerca.setText("ACERCA DE");
        btnAcerca.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAcercaActionPerformed(evt);
            }
        });
        panelBienvenida.add(btnAcerca);
        btnAcerca.setBounds(710, 420, 130, 40);

        btnAyuda.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnAyuda.setText("AYUDA");
        btnAyuda.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAyudaActionPerformed(evt);
            }
        });
        panelBienvenida.add(btnAyuda);
        btnAyuda.setBounds(710, 10, 130, 40);

        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        logo.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        logo.setMaximumSize(new java.awt.Dimension(200, 140));
        panelBienvenida.add(logo);
        logo.setBounds(20, 10, 310, 140);

        fondoBienvenida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/principal.jpg"))); // NOI18N
        panelBienvenida.add(fondoBienvenida);
        fondoBienvenida.setBounds(0, 0, 850, 480);

        jlpPrincipal.add(panelBienvenida, "card2");

        panelIniciar.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelIniciar.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelIniciar.setLayout(null);

        logo1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        logo1.setMaximumSize(new java.awt.Dimension(200, 140));
        panelIniciar.add(logo1);
        logo1.setBounds(260, 30, 320, 150);

        lblUsuario1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        lblUsuario1.setForeground(new java.awt.Color(255, 255, 255));
        lblUsuario1.setLabelFor(txtCorreo);
        lblUsuario1.setText("Usuario:");
        panelIniciar.add(lblUsuario1);
        lblUsuario1.setBounds(260, 190, 320, 30);

        txtUsuarioIniciar.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        panelIniciar.add(txtUsuarioIniciar);
        txtUsuarioIniciar.setBounds(260, 220, 320, 40);

        lblPass2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        lblPass2.setForeground(new java.awt.Color(255, 255, 255));
        lblPass2.setLabelFor(txtCorreo);
        lblPass2.setText("Contraseña:");
        panelIniciar.add(lblPass2);
        lblPass2.setBounds(260, 300, 320, 30);

        txtPassIniciar.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        panelIniciar.add(txtPassIniciar);
        txtPassIniciar.setBounds(260, 330, 320, 40);
        txtPassIniciar.setNextFocusableComponent(btnAceptarInicio);

        btnAceptarInicio.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnAceptarInicio.setText("INICIAR");
        btnAceptarInicio.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAceptarInicioActionPerformed(evt);
            }
        });
        panelIniciar.add(btnAceptarInicio);
        btnAceptarInicio.setBounds(670, 420, 170, 40);

        btnVolver.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnVolver.setText("VOLVER");
        btnVolver.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnVolverActionPerformed(evt);
            }
        });
        panelIniciar.add(btnVolver);
        btnVolver.setBounds(10, 420, 170, 40);

        fondoIniciar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/tierra.png"))); // NOI18N
        panelIniciar.add(fondoIniciar);
        fondoIniciar.setBounds(0, 0, 850, 480);

        jlpPrincipal.add(panelIniciar, "card3");

        panelRegistrarse.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelRegistrarse.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelRegistrarse.setLayout(null);

        lblCorreo.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        lblCorreo.setForeground(new java.awt.Color(255, 255, 255));
        lblCorreo.setLabelFor(txtCorreo);
        lblCorreo.setText("Correo electrónico:");
        panelRegistrarse.add(lblCorreo);
        lblCorreo.setBounds(260, 50, 320, 30);

        txtCorreo.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        panelRegistrarse.add(txtCorreo);
        txtCorreo.setBounds(260, 80, 320, 40);

        lblUsuario.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        lblUsuario.setForeground(new java.awt.Color(255, 255, 255));
        lblUsuario.setLabelFor(txtCorreo);
        lblUsuario.setText("Usuario:");
        panelRegistrarse.add(lblUsuario);
        lblUsuario.setBounds(260, 150, 320, 30);

        txtUsuario.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        panelRegistrarse.add(txtUsuario);
        txtUsuario.setBounds(260, 180, 320, 40);

        lblPass.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        lblPass.setForeground(new java.awt.Color(255, 255, 255));
        lblPass.setLabelFor(txtCorreo);
        lblPass.setText("Contraseña:");
        panelRegistrarse.add(lblPass);
        lblPass.setBounds(260, 240, 320, 30);

        txtPass.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        panelRegistrarse.add(txtPass);
        txtPass.setBounds(260, 270, 320, 40);

        lblPass1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        lblPass1.setForeground(new java.awt.Color(255, 255, 255));
        lblPass1.setLabelFor(txtCorreo);
        lblPass1.setText("Confirmar contraseña:");
        panelRegistrarse.add(lblPass1);
        lblPass1.setBounds(260, 340, 320, 30);

        txtPassConfirmar.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        panelRegistrarse.add(txtPassConfirmar);
        txtPassConfirmar.setBounds(260, 370, 320, 40);
        txtPassConfirmar.setNextFocusableComponent(btnAceptarRegistro);

        btnAceptarRegistro.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnAceptarRegistro.setText("REGISTRARSE");
        btnAceptarRegistro.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnAceptarRegistroActionPerformed(evt);
            }
        });
        panelRegistrarse.add(btnAceptarRegistro);
        btnAceptarRegistro.setBounds(670, 420, 170, 40);

        btnVolver1.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnVolver1.setText("VOLVER");
        btnVolver1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnVolverActionPerformed(evt);
            }
        });
        panelRegistrarse.add(btnVolver1);
        btnVolver1.setBounds(10, 420, 170, 40);

        fondoRegistrarse.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/tierra.png"))); // NOI18N
        panelRegistrarse.add(fondoRegistrarse);
        fondoRegistrarse.setBounds(0, 0, 850, 480);

        jlpPrincipal.add(panelRegistrarse, "card3");

        panelAyuda.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelAyuda.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelAyuda.setLayout(null);

        jlListaManualesJuego.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jlListaManualesJuego.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Juego", "Movimiento", "Inventario", "Tienda" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jlListaManualesJuego.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlListaManualesJuego.setSelectedIndex(0);
        jlListaManualesJuego.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                jlListaManualesJuegoValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jlListaManualesJuego);

        txtManualJuego.setEditable(false);
        jScrollPane6.setViewportView(txtManualJuego);

        javax.swing.GroupLayout jpJuegoLayout = new javax.swing.GroupLayout(jpJuego);
        jpJuego.setLayout(jpJuegoLayout);
        jpJuegoLayout.setHorizontalGroup(
            jpJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpJuegoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 659, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpJuegoLayout.setVerticalGroup(
            jpJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpJuegoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpJuegoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane6)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Juego", jpJuego);

        txtManualCrearUsuario.setEditable(false);
        txtManualCrearUsuario.setToolTipText("CrearUsuario");
        jScrollPane5.setViewportView(txtManualCrearUsuario);

        javax.swing.GroupLayout jpCrearUsuarioLayout = new javax.swing.GroupLayout(jpCrearUsuario);
        jpCrearUsuario.setLayout(jpCrearUsuarioLayout);
        jpCrearUsuarioLayout.setHorizontalGroup(
            jpCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrearUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpCrearUsuarioLayout.setVerticalGroup(
            jpCrearUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrearUsuarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Crear Usuario", jpCrearUsuario);

        txtManualCrearPartida.setEditable(false);
        txtManualCrearPartida.setToolTipText("CrearPartida");
        jScrollPane7.setViewportView(txtManualCrearPartida);

        javax.swing.GroupLayout jpCrearPartidaLayout = new javax.swing.GroupLayout(jpCrearPartida);
        jpCrearPartida.setLayout(jpCrearPartidaLayout);
        jpCrearPartidaLayout.setHorizontalGroup(
            jpCrearPartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrearPartidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpCrearPartidaLayout.setVerticalGroup(
            jpCrearPartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrearPartidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Crear Partida", jpCrearPartida);

        txtManualUnirsePartida.setEditable(false);
        txtManualUnirsePartida.setToolTipText("UnirsePartida");
        jScrollPane8.setViewportView(txtManualUnirsePartida);

        javax.swing.GroupLayout jpUnirsePartidaLayout = new javax.swing.GroupLayout(jpUnirsePartida);
        jpUnirsePartida.setLayout(jpUnirsePartidaLayout);
        jpUnirsePartidaLayout.setHorizontalGroup(
            jpUnirsePartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUnirsePartidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                .addContainerGap())
        );
        jpUnirsePartidaLayout.setVerticalGroup(
            jpUnirsePartidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUnirsePartidaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Unirse a Partida", jpUnirsePartida);

        panelAyuda.add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 30, 830, 380);

        btnVolver2.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnVolver2.setText("VOLVER");
        btnVolver2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnVolverActionPerformed(evt);
            }
        });
        panelAyuda.add(btnVolver2);
        btnVolver2.setBounds(10, 420, 170, 40);

        fondoAyuda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/tierra.png"))); // NOI18N
        panelAyuda.add(fondoAyuda);
        fondoAyuda.setBounds(0, 0, 850, 480);

        jlpPrincipal.add(panelAyuda, "card3");

        panelAcercaDe.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelAcercaDe.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelAcercaDe.setLayout(null);

        btnVolver3.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnVolver3.setText("VOLVER");
        btnVolver3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnVolverActionPerformed(evt);
            }
        });
        panelAcercaDe.add(btnVolver3);
        btnVolver3.setBounds(10, 420, 170, 40);

        btnCambiarServidor.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnCambiarServidor.setText("SERVIDOR");
        btnCambiarServidor.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCambiarServidorActionPerformed(evt);
            }
        });
        panelAcercaDe.add(btnCambiarServidor);
        btnCambiarServidor.setBounds(670, 420, 170, 40);

        jScrollPane9.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        txtAcercaDe.setEditable(false);
        jScrollPane9.setViewportView(txtAcercaDe);

        panelAcercaDe.add(jScrollPane9);
        jScrollPane9.setBounds(198, 200, 460, 260);

        logo2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/kdlteam.png"))); // NOI18N
        logo2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        panelAcercaDe.add(logo2);
        logo2.setBounds(250, 10, 340, 190);

        fondoAcerca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/tierra.png"))); // NOI18N
        panelAcercaDe.add(fondoAcerca);
        fondoAcerca.setBounds(0, 0, 850, 480);

        jlpPrincipal.add(panelAcercaDe, "card3");

        panelPartida.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelPartida.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelPartida.setLayout(null);

        lblFlechaIzquierda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFlechaIzquierda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sprites/flechaDer.png"))); // NOI18N
        lblFlechaIzquierda.setToolTipText("");
        lblFlechaIzquierda.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblFlechaIzquierda.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblFlechaIzquierda.setMaximumSize(new java.awt.Dimension(190, 150));
        lblFlechaIzquierda.setMinimumSize(new java.awt.Dimension(190, 150));
        lblFlechaIzquierda.setPreferredSize(new java.awt.Dimension(190, 150));
        lblFlechaIzquierda.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                lblFlechaIzquierdaMouseClicked(evt);
            }
        });
        panelPartida.add(lblFlechaIzquierda);
        lblFlechaIzquierda.setBounds(750, 280, 70, 70);

        lblFlechaDerecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFlechaDerecha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sprites/flechaIzq.png"))); // NOI18N
        lblFlechaDerecha.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblFlechaDerecha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblFlechaDerecha.setMaximumSize(new java.awt.Dimension(190, 150));
        lblFlechaDerecha.setMinimumSize(new java.awt.Dimension(190, 150));
        lblFlechaDerecha.setPreferredSize(new java.awt.Dimension(190, 150));
        lblFlechaDerecha.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                lblFlechaDerechaMouseClicked(evt);
            }
        });
        panelPartida.add(lblFlechaDerecha);
        lblFlechaDerecha.setBounds(520, 280, 80, 70);

        lblPersonaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPersonaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sprites/personaje/0.png"))); // NOI18N
        lblPersonaje.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        lblPersonaje.setMaximumSize(new java.awt.Dimension(190, 150));
        lblPersonaje.setMinimumSize(new java.awt.Dimension(190, 150));
        lblPersonaje.setPreferredSize(new java.awt.Dimension(190, 150));
        panelPartida.add(lblPersonaje);
        lblPersonaje.setBounds(620, 250, 110, 150);

        logo3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logo.png"))); // NOI18N
        logo3.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        panelPartida.add(logo3);
        logo3.setBounds(500, 40, 340, 150);

        lblNickname.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblNickname.setForeground(new java.awt.Color(255, 255, 255));
        lblNickname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNickname.setText("Bienvenido, barreto.exe");
        lblNickname.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        panelPartida.add(lblNickname);
        lblNickname.setBounds(500, 210, 340, 30);

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel1.setText("Nombre de Partida");

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel2.setText("Descripción de la Partida");

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel3.setText("Límite de Jugadores");

        txtNombrePartida.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N

        txtDescPartida.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N

        spinCantJugadores.setFont(new java.awt.Font("Consolas", 0, 18)); // NOI18N
        spinCantJugadores.setModel(new javax.swing.SpinnerNumberModel(2, 2, 6, 1));

        btnCrearPartida.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnCrearPartida.setText("CREAR");
        btnCrearPartida.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCrearPartidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpCrearLayout = new javax.swing.GroupLayout(jpCrear);
        jpCrear.setLayout(jpCrearLayout);
        jpCrearLayout.setHorizontalGroup(
            jpCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrearLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpCrearLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCrearPartida, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpCrearLayout.createSequentialGroup()
                        .addGroup(jpCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addGroup(jpCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spinCantJugadores, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(0, 195, Short.MAX_VALUE))
                    .addComponent(txtNombrePartida)
                    .addComponent(txtDescPartida, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jpCrearLayout.setVerticalGroup(
            jpCrearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpCrearLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNombrePartida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDescPartida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(spinCantJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(btnCrearPartida, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jtPartidas.addTab("Crear Partida", jpCrear);

        jtPartidasActivas.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jtPartidasActivas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "Nombre", "Descripcion", "Estado", "Jugadores", "Limite"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jtPartidasActivas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jtPartidasActivas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtPartidasActivas.setRowSelectionAllowed(true);
        jtPartidasActivas.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jtPartidasActivasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtPartidasActivas);
        if (jtPartidasActivas.getColumnModel().getColumnCount() > 0)
        {
            jtPartidasActivas.getColumnModel().getColumn(0).setPreferredWidth(50);
            jtPartidasActivas.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        btnUnirsePartida.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnUnirsePartida.setText("UNIRSE");
        btnUnirsePartida.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnUnirsePartidaActionPerformed(evt);
            }
        });

        btnActualizarPartidas.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        btnActualizarPartidas.setText("ACTUALIZAR");
        btnActualizarPartidas.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnActualizarPartidasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpUnirseLayout = new javax.swing.GroupLayout(jpUnirse);
        jpUnirse.setLayout(jpUnirseLayout);
        jpUnirseLayout.setHorizontalGroup(
            jpUnirseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUnirseLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jpUnirseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jpUnirseLayout.createSequentialGroup()
                        .addComponent(btnActualizarPartidas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUnirsePartida, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jpUnirseLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))))
        );
        jpUnirseLayout.setVerticalGroup(
            jpUnirseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpUnirseLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jpUnirseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUnirsePartida, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnActualizarPartidas, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jtPartidas.addTab("Unirse a Partida", jpUnirse);

        lblNombrePartida.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        lblNombrePartida.setText("Nombre de Partida");

        jtJugadores.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jtJugadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "Jugador", "Personaje Seleccionado", "IP"
            }
        )
        {
            Class[] types = new Class []
            {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean []
            {
                false, false, false
            };

            public Class getColumnClass(int columnIndex)
            {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtJugadores);

        javax.swing.GroupLayout jpLobbyLayout = new javax.swing.GroupLayout(jpLobby);
        jpLobby.setLayout(jpLobbyLayout);
        jpLobbyLayout.setHorizontalGroup(
            jpLobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLobbyLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpLobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpLobbyLayout.createSequentialGroup()
                        .addComponent(lblNombrePartida)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE))
                .addContainerGap())
        );
        jpLobbyLayout.setVerticalGroup(
            jpLobbyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLobbyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblNombrePartida)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jtPartidas.addTab("Lobby", jpLobby);

        panelPartida.add(jtPartidas);
        jtPartidas.setBounds(10, 40, 470, 360);

        btnComenzarPartida.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnComenzarPartida.setText("COMENZAR");
        btnComenzarPartida.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnComenzarPartidaActionPerformed(evt);
            }
        });
        panelPartida.add(btnComenzarPartida);
        btnComenzarPartida.setBounds(670, 420, 170, 40);

        btnCancelarPartida.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnCancelarPartida.setText("VOLVER");
        btnCancelarPartida.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCancelarPartidaActionPerformed(evt);
            }
        });
        panelPartida.add(btnCancelarPartida);
        btnCancelarPartida.setBounds(10, 420, 170, 40);

        fondoAcerca1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/tierra.png"))); // NOI18N
        panelPartida.add(fondoAcerca1);
        fondoAcerca1.setBounds(0, 0, 850, 480);

        jlpPrincipal.add(panelPartida, "card3");

        panelEstadisticas.setMinimumSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelEstadisticas.setPreferredSize(new java.awt.Dimension(Constant.FRAME_WIDTH, Constant.FRAME_HEIGHT));
        panelEstadisticas.setLayout(null);

        txtUsuarioEstadisticas.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
        txtUsuarioEstadisticas.setText("barreto");
        panelEstadisticas.add(txtUsuarioEstadisticas);
        txtUsuarioEstadisticas.setBounds(10, 50, 220, 30);

        btnConsultarEstadisticas.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        btnConsultarEstadisticas.setText("Consultar");
        btnConsultarEstadisticas.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnConsultarEstadisticasActionPerformed(evt);
            }
        });
        panelEstadisticas.add(btnConsultarEstadisticas);
        btnConsultarEstadisticas.setBounds(250, 50, 120, 30);

        lblEstNombreUsuario.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblEstNombreUsuario.setText("Usuario...");

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel4.setText("Partidas Jugadas");

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel5.setText("Color Favorito");

        jLabel6.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel6.setText("Animales Matados");

        jLabel7.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel7.setText("Monstruos Matados");

        jLabel8.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel8.setText("Jefes Matados");

        jLabel9.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel9.setText("Esmeraldas Recogidas");

        jLabel10.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel10.setText("Objetos Recogidos");

        jLabel11.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel11.setText("Partidas Ganadas");

        jLabel12.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        jLabel12.setText("Partidas Perdidas");

        lblPartidasJugadas.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblPartidasJugadas.setText("20");
        lblPartidasJugadas.setToolTipText("");

        lblMonstruosMatados.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblMonstruosMatados.setText("20");
        lblMonstruosMatados.setToolTipText("");

        lblObjetosRecogidos.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblObjetosRecogidos.setText("20");
        lblObjetosRecogidos.setToolTipText("");

        lblPartidasGanadas.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblPartidasGanadas.setText("20");
        lblPartidasGanadas.setToolTipText("");

        lblJefesMatados.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblJefesMatados.setText("20");
        lblJefesMatados.setToolTipText("");

        lblEsmeraldasRecogidas.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblEsmeraldasRecogidas.setText("20");
        lblEsmeraldasRecogidas.setToolTipText("");

        lblColorFavorito.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblColorFavorito.setText("Azul");
        lblColorFavorito.setToolTipText("");

        lblAnimalesMatados.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblAnimalesMatados.setText("20");
        lblAnimalesMatados.setToolTipText("");

        lblPartidasPerdidas.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        lblPartidasPerdidas.setText("20");
        lblPartidasPerdidas.setToolTipText("");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEstNombreUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel4)
                            .addComponent(lblPartidasJugadas)
                            .addComponent(lblPartidasGanadas)
                            .addComponent(jLabel12)
                            .addComponent(lblPartidasPerdidas))
                        .addGap(110, 110, 110)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(lblMonstruosMatados)
                            .addComponent(lblJefesMatados)
                            .addComponent(lblAnimalesMatados))
                        .addGap(110, 110, 110)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblObjetosRecogidos)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(lblEsmeraldasRecogidas)
                            .addComponent(jLabel5)
                            .addComponent(lblColorFavorito))
                        .addGap(0, 207, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEstNombreUsuario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPartidasJugadas)
                    .addComponent(lblMonstruosMatados)
                    .addComponent(lblObjetosRecogidos))
                .addGap(30, 30, 30)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPartidasGanadas)
                    .addComponent(lblJefesMatados)
                    .addComponent(lblEsmeraldasRecogidas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblColorFavorito)
                            .addComponent(lblAnimalesMatados)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPartidasPerdidas)))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Estadísticas del Usuario", jPanel4);

        panelEstadisticas.add(jTabbedPane2);
        jTabbedPane2.setBounds(10, 100, 830, 310);

        btnVolver4.setFont(new java.awt.Font("Consolas", 0, 15)); // NOI18N
        btnVolver4.setText("VOLVER");
        btnVolver4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnVolverActionPerformed(evt);
            }
        });
        panelEstadisticas.add(btnVolver4);
        btnVolver4.setBounds(10, 420, 170, 40);

        fondoEstadisticas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fondos/tierra.png"))); // NOI18N
        panelEstadisticas.add(fondoEstadisticas);
        fondoEstadisticas.setBounds(0, 0, 850, 480);

        jlpPrincipal.add(panelEstadisticas, "card3");

        getContentPane().add(jlpPrincipal, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * **********************************************************************************************
     */
    //<editor-fold defaultstate="collapsed" desc="Eventos">
    private void btnAyudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAyudaActionPerformed
        Sonido.click();
        mostrarPanel(panelAyuda);
    }//GEN-LAST:event_btnAyudaActionPerformed

    private void btnAcercaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcercaActionPerformed
        Sonido.click();
        mostrarPanel(panelAcercaDe);
    }//GEN-LAST:event_btnAcercaActionPerformed

    private void btnEstadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEstadisticasActionPerformed
        Sonido.click();
        mostrarPanel(panelEstadisticas);
    }//GEN-LAST:event_btnEstadisticasActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        Sonido.click();
        txtCorreo.requestFocus();
        mostrarPanel(panelRegistrarse);
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnIniciarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarSesionActionPerformed
        Sonido.click();
        txtUsuarioIniciar.requestFocus();
        mostrarPanel(panelIniciar);
    }//GEN-LAST:event_btnIniciarSesionActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnVolverActionPerformed
    {//GEN-HEADEREND:event_btnVolverActionPerformed
        Sonido.click();
        mostrarPanel(panelBienvenida);
        limpiarTextBoxes();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnAceptarRegistroActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAceptarRegistroActionPerformed
    {//GEN-HEADEREND:event_btnAceptarRegistroActionPerformed
        Sonido.click();

        registrarUsuario();
    }//GEN-LAST:event_btnAceptarRegistroActionPerformed

    private void btnAceptarInicioActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnAceptarInicioActionPerformed
    {//GEN-HEADEREND:event_btnAceptarInicioActionPerformed
        Sonido.click();

        iniciarSesion();
    }//GEN-LAST:event_btnAceptarInicioActionPerformed

    private void btnCambiarServidorActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCambiarServidorActionPerformed
    {//GEN-HEADEREND:event_btnCambiarServidorActionPerformed
        Sonido.click();

        //Cambiar IP de la base de datos
        DBOperacion.SERVIDOR = JOptionPane.showInputDialog(this, "Ingrese IP del servidor", DBOperacion.SERVIDOR);
    }//GEN-LAST:event_btnCambiarServidorActionPerformed

    private void lblFlechaDerechaMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_lblFlechaDerechaMouseClicked
    {//GEN-HEADEREND:event_lblFlechaDerechaMouseClicked
        Sonido.click();
        personajeSeleccionado--;
        elegirImagenPersonaje();
    }//GEN-LAST:event_lblFlechaDerechaMouseClicked

    private void lblFlechaIzquierdaMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_lblFlechaIzquierdaMouseClicked
    {//GEN-HEADEREND:event_lblFlechaIzquierdaMouseClicked
        Sonido.click();
        personajeSeleccionado++;
        elegirImagenPersonaje();
    }//GEN-LAST:event_lblFlechaIzquierdaMouseClicked

    private void btnComenzarPartidaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnComenzarPartidaActionPerformed
    {//GEN-HEADEREND:event_btnComenzarPartidaActionPerformed
        Sonido.click();

        comenzarPartida();
    }//GEN-LAST:event_btnComenzarPartidaActionPerformed

    private void btnCrearPartidaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCrearPartidaActionPerformed
    {//GEN-HEADEREND:event_btnCrearPartidaActionPerformed
        Sonido.click();
        crearPartida();
    }//GEN-LAST:event_btnCrearPartidaActionPerformed

    private void btnUnirsePartidaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnUnirsePartidaActionPerformed
    {//GEN-HEADEREND:event_btnUnirsePartidaActionPerformed
        int partidaRow = this.jtPartidasActivas.getSelectedRow();

        //Verificar que hay partida elegida.
        if (partidaRow == -1)
        {
            return;
        }

        int idPartida = (int) this.jtPartidasActivas.getValueAt(partidaRow, 0);

        //Guardar nombre e id de partida por unirse
        partida.setNombre((String) this.jtPartidasActivas.getValueAt(partidaRow, 1));
        partida.setId(idPartida);

        //Deshabilitar botones de crear partida
        this.lblFlechaIzquierda.setVisible(false);
        this.lblFlechaDerecha.setVisible(false);

        entrarPartida(idPartida);
    }//GEN-LAST:event_btnUnirsePartidaActionPerformed

    private void jtPartidasActivasMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jtPartidasActivasMouseClicked
    {//GEN-HEADEREND:event_jtPartidasActivasMouseClicked
        // TODO add your handling code here:
        int partidaRow = this.jtPartidasActivas.getSelectedRow();
        this.jtPartidasActivas.getSelectionModel().addSelectionInterval(partidaRow, partidaRow);
    }//GEN-LAST:event_jtPartidasActivasMouseClicked

    private void btnCancelarPartidaActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCancelarPartidaActionPerformed
    {//GEN-HEADEREND:event_btnCancelarPartidaActionPerformed
        Sonido.click();
        mostrarPanel(panelBienvenida);

        salirPartida();

        if (ventanaJuego != null && ventanaJuego.isEnabled())
        {
            ventanaJuego.dispose();
        }

        limpiarPanelPartidas();
    }//GEN-LAST:event_btnCancelarPartidaActionPerformed

    private void btnActualizarPartidasActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnActualizarPartidasActionPerformed
    {//GEN-HEADEREND:event_btnActualizarPartidasActionPerformed
        actualizarPartidasActivas();
    }//GEN-LAST:event_btnActualizarPartidasActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        btnCancelarPartida.doClick();
        System.exit(1);
    }//GEN-LAST:event_formWindowClosing

    private void jlListaManualesJuegoValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_jlListaManualesJuegoValueChanged
    {//GEN-HEADEREND:event_jlListaManualesJuegoValueChanged
        cargarRTF(txtManualJuego, jlListaManualesJuego.getSelectedValue());
    }//GEN-LAST:event_jlListaManualesJuegoValueChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed
        abrirJuego();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnConsultarEstadisticasActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnConsultarEstadisticasActionPerformed
    {//GEN-HEADEREND:event_btnConsultarEstadisticasActionPerformed
        consultarEstadisticas();
    }//GEN-LAST:event_btnConsultarEstadisticasActionPerformed
    //</editor-fold>

    
    /**
     * Consulta las estadísticas del usuario indicado en el textbox correspondiente.
     */
    private void consultarEstadisticas()
    {
        //Pedir consulta del usuario indicado
        MetodosSocket.enviarPaquete(
                new PaqueteOperacion(Operacion.ESTADISTICAS, this.txtUsuarioEstadisticas.getText()),
                this
        );

        //Bloquear botón
        new Thread(new Runnable()
        {
            @Override
            public void run()
            {
                btnConsultarEstadisticas.setEnabled(false);
            }
        }).start();
    }

    /**
     * Solicita al servidor que registre al usuario con los datos proveídos.
     */
    private void registrarUsuario()
    {
        String usuario = txtUsuario.getText();
        String correo = txtCorreo.getText();
        char[] pass = txtPass.getPassword();

        //Verificar que las contraseñas sean iguales y que no estén vacías
        if (!Arrays.equals(txtPass.getPassword(), txtPassConfirmar.getPassword()))
        {
            JOptionPane.showMessageDialog(this, "Las contraseñas no coinciden.");
        } //Verificar que no haya campos vacíoss
        else if ("".equals(correo) || "".equals(usuario) || pass.length == 0)
        {
            JOptionPane.showMessageDialog(this, "Hay campos vacíos.");
        }
        else
        {
            //Crear instancia de usuario para enviarla al servidor
            DBUsuario usuarioObj = new DBUsuario(correo, usuario, txtPass.getText());
            MetodosSocket.enviarPaquete(new PaqueteOperacion(Operacion.REGISTRAR, usuarioObj), this);

            //Bloquear botones
            btnAceptarRegistro.setEnabled(false);
            btnVolver1.setEnabled(false);
        }
    }

    /**
     * Envía al servidor la solicitud de inicio de sesión con los datos
     * proveídos.
     */
    private void iniciarSesion()
    {
        String usuario = txtUsuarioIniciar.getText();
        String pass = txtPassIniciar.getText();

        if ("".equals(usuario) || "".equals(pass))
        {
            JOptionPane.showMessageDialog(this, "Hay campos vacíos.");
        }
        else
        {
            //Crear instancia de usuario para enviarla al servidor
            usuarioLogueado = new DBUsuario(null, usuario, pass);
            MetodosSocket.enviarPaquete(new PaqueteOperacion(Operacion.INICIAR_SESION, usuarioLogueado), this);

            //Bloquear botones
            btnAceptarInicio.setEnabled(false);
            btnVolver.setEnabled(false);
        }
    }

    /**
     * Envía al servidor la solicitud de crear una partida.
     */
    private void crearPartida()
    {
        String nombrePartida = txtNombrePartida.getText();
        String descripcionPartida = txtDescPartida.getText();
        int cantJugadores = (int) spinCantJugadores.getValue();

        if (nombrePartida.equals(""))
        {
            JOptionPane.showMessageDialog(this, "El nombre de la partida no puede estar en blanco.");
            return;
        }

        //Deshabilitar botones de crear partida
        btnCrearPartida.setEnabled(false);
        lblFlechaIzquierda.setVisible(false);
        lblFlechaDerecha.setVisible(false);

        //Guardar nombre de la partida por crear
        partida.setNombre(nombrePartida);

        //Crear paquete de envío a la base de datos
        DBPartida part = new DBPartida(nombrePartida, descripcionPartida, cantJugadores);
        MetodosSocket.enviarPaquete(new PaqueteOperacion(Operacion.CREAR_PARTIDA, part), this);
    }

    /**
     * Envía al servidor la solicitud de unirse a la partida.
     *
     * @param idPartida es el id de la partida a unirse.
     */
    private void entrarPartida(int idPartida)
    {
        //Asignar personaje elegido al usuario
        usuarioLogueado.setPersonajeSeleccionado(personajeSeleccionado);

        //Asignar partida a la que se quiere unir
        usuarioLogueado.setPartida(idPartida);

        MetodosSocket.enviarPaquete(new PaqueteOperacion(Operacion.UNIRSE_PARTIDA, usuarioLogueado), this);
    }

    /**
     * Envía al servidor la solicitud de salirse de la partida.
     */
    public void salirPartida()
    {
        if (partida.getId() == -1)
        {
            return;
        }

        //Dejar de escuchar los usuarios nuevos
        hiloEstadoPartida.interrupt();

        MetodosSocket.enviarPaquete(new PaqueteOperacion(Operacion.SALIR_PARTIDA, usuarioLogueado), this);
    }

    /**
     * Envía al servidor la solicitud de comenzar la partida.
     */
    private void comenzarPartida()
    {
        //Deshabilitar botón
        btnComenzarPartida.setEnabled(false);

        MetodosSocket.enviarPaquete(new PaqueteOperacion(Operacion.COMENZAR_PARTIDA, partida), null);
    }

    /**
     * Envía al servidor la petición de las partidas que hay activas
     * actualmente.
     */
    private void actualizarPartidasActivas()
    {
        MetodosSocket.enviarPaquete(new PaqueteOperacion(Operacion.PEDIR_PARTIDAS_ACTIVAS, null), this);
    }

    /**
     * Método que se debe llamar siempre que se envíe información al servidor y
     * luego se desee consultar su respuesta.
     *
     * @param socket es el socket utilizado para enviar la información al
     * servidor, a través de él mismo se recibirá la respuesta. El socket es
     * cerrado dentro del método.
     * @param ventanaOrigen es el objeto formulario que contiene a los controles
     * de la vista a modificar.
     */
    @Override
    public void recibirRespuestaServer(final Socket socket, final UsesSocket ventanaOrigen)
    {
        new Thread(new Runnable()
        {
            @Override
            public void run()
            {
                System.out.println("Esperando respuesta server...");

                try
                {
                    //Leer respuesta del servidor
                    ObjectInputStream paqueteRecibido = new ObjectInputStream(socket.getInputStream());
                    PaqueteResultado resultado = (PaqueteResultado) paqueteRecibido.readObject();

                    final FrmPrincipal formulario = (FrmPrincipal) ventanaOrigen;
                    //Habilitar botones de nuevo
                    new Thread(new Runnable()
                    {
                        @Override
                        public void run()
                        {
                            formulario.btnAceptarRegistro.setEnabled(true);
                            formulario.btnVolver1.setEnabled(true);

                            formulario.btnAceptarInicio.setEnabled(true);
                            formulario.btnVolver.setEnabled(true);
                        }
                    }).start();

                    if (resultado.getResultado() == ResultadoOperacion.ERROR)
                    {
                        JOptionPane.showMessageDialog(formulario, "Hubo un error en la operación.");
                        formulario.btnVolver.doClick();
                    }

                    //<editor-fold defaultstate="collapsed" desc="Resultados de registro">
                    //Resultados de registro
                    else if (resultado.getResultado() == ResultadoOperacion.CORREO_NO_DISPONIBLE)
                    {
                        JOptionPane.showMessageDialog(formulario, "Correo no disponible.");
                    }
                    else if (resultado.getResultado() == ResultadoOperacion.USUARIO_NO_DISPONIBLE)
                    {
                        JOptionPane.showMessageDialog(formulario, "Usuario no disponible.");
                    }
                    else if (resultado.getResultado() == ResultadoOperacion.USUARIO_REGISTRADO)
                    {
                        JOptionPane.showMessageDialog(formulario, "¡Usuario registrado exitosamente!");
                        formulario.btnVolver.doClick();
                    } //</editor-fold>  
                    //<editor-fold defaultstate="collapsed" desc="Resultados de inicio de sesión">
                    //Resultados de inicio de sesión
                    else if (resultado.getResultado() == ResultadoOperacion.CREDENCIAL_INVALIDA)
                    {
                        JOptionPane.showMessageDialog(formulario, "Usuario o contraseña incorrectos.");
                    }
                    else if (resultado.getResultado() == ResultadoOperacion.SESION_VALIDA)
                    {
                        formulario.mostrarPanel(formulario.panelPartida);
                        formulario.limpiarTextBoxes();
                        formulario.lblNickname.setText("Bienvenido, " + usuarioLogueado.getUsuario());

                        usuarioLogueado.setId((int) resultado.getInformacion());
                        actualizarPartidasActivas();
                    } //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="Resultados de Crear Partida">
                    //Resultados de crear partida
                    else if (resultado.getResultado() == ResultadoOperacion.PARTIDA_CREADA)
                    {
                        //JOptionPane.showMessageDialog(null, "Partida creada.");
                        partida.setId((int) resultado.getInformacion());
                        entrarPartida(partida.getId());

                        //Bloquear paneles y permanecer en el LOBBY
                        formulario.jtPartidas.setEnabledAt(2, true);
                        formulario.jtPartidas.setSelectedIndex(2);
                        formulario.jtPartidas.setEnabledAt(0, false);
                        formulario.jtPartidas.setEnabledAt(1, false);
                    }
                    else if (resultado.getResultado() == ResultadoOperacion.PARTIDA_YA_EXISTE)
                    {
                        JOptionPane.showMessageDialog(formulario, "Ya existe una partida con el mismo nombre.");

                        //Rehabilitar selección de partida y personaje
                        formulario.btnCrearPartida.setEnabled(true);
                        formulario.lblFlechaDerecha.setVisible(true);
                        formulario.lblFlechaIzquierda.setVisible(true);
                    } //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="Resultados de Unirse a Partida">
                    //Resultados de unirse a partida
                    else if (resultado.getResultado() == ResultadoOperacion.UNIDO_EXITOSAMENTE)
                    {
                        //Bloquear paneles y permanecer en el LOBBY
                        formulario.jtPartidas.setSelectedIndex(2);
                        formulario.jtPartidas.setEnabledAt(0, false);
                        formulario.jtPartidas.setEnabledAt(1, false);

                        partida.setId(usuarioLogueado.getPartida());
                        formulario.lblNombrePartida.setText(partida.getNombre());

                        //Crear hilo para estar a la escucha del estado de la partida
                        hiloEstadoPartida = new Thread(new Runnable()
                        {
                            @Override
                            public void run()
                            {
                                try
                                {
                                    Socket socket;
                                    ObjectOutputStream out;

                                    //Armar paquete para enviar al servidor
                                    PaqueteOperacion paquete
                                            = new PaqueteOperacion(Operacion.PEDIR_ESTADO_PARTIDA, partida);

                                    while (true)
                                    {
                                        Thread.sleep(1000);

                                        //Enviar solicitud al server
                                        socket = new Socket(DBOperacion.SERVIDOR, 27015);
                                        out = new ObjectOutputStream(socket.getOutputStream());
                                        out.writeObject(paquete);

                                        recibirRespuestaServer(socket, formulario);
                                    }
                                }
                                catch (IOException | InterruptedException ex)
                                {
                                    System.out.println(ex.getMessage());
                                }
                            }
                        });
                        hiloEstadoPartida.start();
                    }
                    else if (resultado.getResultado() == ResultadoOperacion.PARTIDA_LLENA)
                    {
                        JOptionPane.showMessageDialog(
                                formulario,
                                "La partida a la que te quieres unir está llena, en curso o no existe."
                        );

                        //Rehabilitar selección de partida y personaje
                        formulario.jtPartidas.setEnabledAt(0, true);
                        formulario.jtPartidas.setEnabledAt(1, true);
                        formulario.jtPartidas.setEnabledAt(2, false);
                        formulario.jtPartidas.setSelectedIndex(1);

                        formulario.lblFlechaDerecha.setVisible(true);
                        formulario.lblFlechaIzquierda.setVisible(true);
                    } //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="Resultados de Pedir Datos Partida">
                    //<editor-fold defaultstate="collapsed" desc="Usuarios">
                    else if (resultado.getResultado() == ResultadoOperacion.USUARIOS_PARTIDA)
                    {
                        ((DefaultTableModel) formulario.jtJugadores.getModel()).setRowCount(0);

                        ArrayList<DBUsuario> usuarios = (ArrayList<DBUsuario>) resultado.getInformacion();
                        DefaultTableModel tabla = (DefaultTableModel) formulario.jtJugadores.getModel();

                        int cantJugadores = 0;
                        for (DBUsuario usuario : usuarios)
                        {
                            cantJugadores++;

                            //Obtener el número de jugador
                            if (usuario.getUsuario().equals(usuarioLogueado.getUsuario()))
                            {
                                usuario.setNumeroJugador(cantJugadores);
                            }

                            tabla.addRow(new Object[]
                            {
                                usuario.getUsuario(),
                                usuario.getPersonajeSeleccionadoString(),
                                usuario.getIp()
                            });
                        }

                        //Verificar si hay más de un jugador y que el jugador sea el creador de la partida
                        if (cantJugadores > 1 && usuarios.get(0).equals(usuarioLogueado))
                        {
                            formulario.btnComenzarPartida.setVisible(true);
                        }
                        else if (cantJugadores <= 1)
                        {
                            formulario.btnComenzarPartida.setVisible(false);
                        }
                    } //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="Partida Iniciada">
                    else if (resultado.getResultado() == ResultadoOperacion.PARTIDA_INICIADA)
                    {
                        hiloEstadoPartida.interrupt();

                        abrirJuego();
                    }
                    //</editor-fold>
                    //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="Resultados de pedir partidas activas">
                    else if (resultado.getResultado() == ResultadoOperacion.PARTIDAS_ACTIVAS)
                    {
                        ((DefaultTableModel) formulario.jtPartidasActivas.getModel()).setRowCount(0);

                        ArrayList<DBPartida> partidas = (ArrayList<DBPartida>) resultado.getInformacion();
                        DefaultTableModel tabla = (DefaultTableModel) formulario.jtPartidasActivas.getModel();

                        for (DBPartida partida : partidas)
                        {
                            tabla.addRow(new Object[]
                            {
                                partida.getId(),
                                partida.getNombre(),
                                partida.getDescripcion(),
                                partida.getEstado().toString(),
                                partida.getCantidadJugadores(),
                                partida.getLimiteJugadores(),
                            });
                        }
                    } //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="Resultados de salir de partida">
                    else if (resultado.getResultado() == ResultadoOperacion.SALIR_PARTIDA_EXITOSO)
                    {
                        JOptionPane.showMessageDialog(formulario, "Has salido de la sala.");
                    }
                    //</editor-fold>

                    else if (resultado.getResultado() == ResultadoOperacion.RESPUESTA_ESTADISTICAS)
                    {
                        HashMap<String, String> estadisticas = (HashMap<String, String>) resultado.getInformacion();

                        formulario.lblEstNombreUsuario.setText(estadisticas.get("nombre"));
                        formulario.lblColorFavorito.setText(estadisticas.get("colorFavorito"));
                        formulario.lblPartidasJugadas.setText(estadisticas.get("partidasJugadas"));
                        formulario.lblPartidasGanadas.setText(estadisticas.get("partidasGanadas"));
                        formulario.lblPartidasPerdidas.setText(estadisticas.get("partidasPerdidas"));
                        formulario.lblMonstruosMatados.setText(estadisticas.get("monstruosMatados"));
                        formulario.lblAnimalesMatados.setText(estadisticas.get("animalesMatados"));
                        formulario.lblJefesMatados.setText(estadisticas.get("jefesMatados"));
                        formulario.lblObjetosRecogidos.setText(estadisticas.get("objetosRecogidos"));
                        formulario.lblEsmeraldasRecogidas.setText(estadisticas.get("esmeraldasRecogidas"));
                    }
                    else if (resultado.getResultado() == ResultadoOperacion.NO_HAY_ESTADISTICAS)
                    {
                        JOptionPane.showMessageDialog(formulario, "No existe el usuario deseado.");
                    }
                    //Desbloquear botón
                    if (resultado.getResultado() == ResultadoOperacion.RESPUESTA_ESTADISTICAS
                        || resultado.getResultado() == ResultadoOperacion.NO_HAY_ESTADISTICAS)
                    {
                        formulario.txtUsuarioEstadisticas.setText("");

                        new Thread(new Runnable()
                        {
                            @Override
                            public void run()
                            {
                                formulario.btnConsultarEstadisticas.setEnabled(true);
                            }
                        }).start();
                    }

                    socket.close();
                }
                catch (IOException | ClassNotFoundException ex)
                {
                    System.out.println(ex.getMessage());
                    JOptionPane.showMessageDialog((Component) ventanaOrigen, ex.getMessage());
                }
            }
        }).start();
    }

    /**
     * Abre el juego haciendo uso de los datos del usuario logueado.
     */
    private void abrirJuego()
    {
        ventanaJuego = new FrmGame(usuarioLogueado);
        ventanaJuego.mostrar();
    }

    /**
     * Rota los sprites de los personajes dependiendo del número seleccionado.
     */
    private void elegirImagenPersonaje()
    {
        personajeSeleccionado = personajeSeleccionado % 6;

        if (personajeSeleccionado < 0)
        {
            personajeSeleccionado = personajeSeleccionado * -1 + 4;
        }

        lblPersonaje.setIcon(new javax.swing.ImageIcon(getClass().getResource("/sprites/personaje/" + personajeSeleccionado + ".png")));
    }

    /**
     * Muestra el panel correspondiente en la ventana principal.
     *
     * @param panel
     */
    private void mostrarPanel(JPanel panel)
    {
        jlpPrincipal.removeAll();
        jlpPrincipal.add(panel);
        jlpPrincipal.revalidate();
    }

    /**
     * Limpia los campos de texto del menú.
     */
    private void limpiarTextBoxes()
    {
        this.txtCorreo.setText("");
        this.txtPass.setText("");
        this.txtPassConfirmar.setText("");
        this.txtPassIniciar.setText("");
        this.txtUsuario.setText("");
        this.txtUsuarioIniciar.setText("");
        this.limpiarPanelEstadisticas();
    }

    /**
     * Reinicia el estado del panel de Partidas.
     */
    private void limpiarPanelPartidas()
    {
        this.txtNombrePartida.setText("");
        this.txtDescPartida.setText("");
        this.spinCantJugadores.setValue(2);
        this.btnCrearPartida.setEnabled(true);
        this.btnComenzarPartida.setEnabled(true);
        this.lblFlechaDerecha.setVisible(true);
        this.lblFlechaIzquierda.setVisible(true);
        this.btnComenzarPartida.setVisible(false);
        this.jtPartidas.setEnabledAt(2, false);
        this.jtPartidas.setEnabledAt(0, true);
        this.jtPartidas.setEnabledAt(1, true);
        this.jtPartidas.setSelectedIndex(0);
        this.personajeSeleccionado = 0;
        this.elegirImagenPersonaje();

        this.partida.setId(-1);
        ((DefaultTableModel) this.jtPartidasActivas.getModel()).setRowCount(0);
        ((DefaultTableModel) this.jtJugadores.getModel()).setRowCount(0);
    }
    private void limpiarPanelEstadisticas()
    {
        this.txtUsuarioEstadisticas.setText("");
        this.lblEstNombreUsuario.setText("...");
        this.lblColorFavorito.setText("...");
        this.lblPartidasGanadas.setText("0");
        this.lblPartidasJugadas.setText("0");
        this.lblPartidasPerdidas.setText("0");
        this.lblMonstruosMatados.setText("0");
        this.lblAnimalesMatados.setText("0");
        this.lblJefesMatados.setText("0");
        this.lblObjetosRecogidos.setText("0");
        this.lblEsmeraldasRecogidas.setText("0");
    }

    /**
     * Carga un archivo de texto enriquecido en EditorPane. El nombre del
     * archivo a cargar debe ser igual al ToolTipText del EditorPane.
     *
     * @param panel es el pane donde se mostrará el archivo
     * @param manual es el nombre del archivo RTF que se va a cargar
     */
    private void cargarRTF(JEditorPane panel, String manual)
    {
        RTFEditorKit rtf = new RTFEditorKit();
        panel.setEditorKit(rtf);

        try
        {
            FileInputStream fi = new FileInputStream("manuales/" + manual + ".rtf");
            rtf.read(fi, panel.getDocument(), 0);
        }
        catch (FileNotFoundException e)
        {
            System.out.println("File not found");
        }
        catch (IOException e)
        {
            System.out.println("I/O error");
        }
        catch (BadLocationException e)
        {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptarInicio;
    private javax.swing.JButton btnAceptarRegistro;
    private javax.swing.JButton btnAcerca;
    private javax.swing.JButton btnActualizarPartidas;
    private javax.swing.JButton btnAyuda;
    private javax.swing.JButton btnCambiarServidor;
    private javax.swing.JButton btnCancelarPartida;
    private javax.swing.JButton btnComenzarPartida;
    private javax.swing.JButton btnConsultarEstadisticas;
    private javax.swing.JButton btnCrearPartida;
    private javax.swing.JButton btnEstadisticas;
    private javax.swing.JButton btnIniciarSesion;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnUnirsePartida;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton btnVolver1;
    private javax.swing.JButton btnVolver2;
    private javax.swing.JButton btnVolver3;
    private javax.swing.JButton btnVolver4;
    private javax.swing.JLabel fondoAcerca;
    private javax.swing.JLabel fondoAcerca1;
    private javax.swing.JLabel fondoAyuda;
    private javax.swing.JLabel fondoBienvenida;
    private javax.swing.JLabel fondoEstadisticas;
    private javax.swing.JLabel fondoIniciar;
    private javax.swing.JLabel fondoRegistrarse;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JList<String> jlListaManualesJuego;
    private javax.swing.JLayeredPane jlpPrincipal;
    private javax.swing.JPanel jpCrear;
    private javax.swing.JPanel jpCrearPartida;
    private javax.swing.JPanel jpCrearUsuario;
    private javax.swing.JPanel jpJuego;
    private javax.swing.JPanel jpLobby;
    private javax.swing.JPanel jpUnirse;
    private javax.swing.JPanel jpUnirsePartida;
    private javax.swing.JTable jtJugadores;
    private javax.swing.JTabbedPane jtPartidas;
    private javax.swing.JTable jtPartidasActivas;
    private javax.swing.JLabel lblAnimalesMatados;
    private javax.swing.JLabel lblColorFavorito;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblEsmeraldasRecogidas;
    private javax.swing.JLabel lblEstNombreUsuario;
    private javax.swing.JLabel lblFlechaDerecha;
    private javax.swing.JLabel lblFlechaIzquierda;
    private javax.swing.JLabel lblJefesMatados;
    private javax.swing.JLabel lblMonstruosMatados;
    private javax.swing.JLabel lblNickname;
    private javax.swing.JLabel lblNombrePartida;
    private javax.swing.JLabel lblObjetosRecogidos;
    private javax.swing.JLabel lblPartidasGanadas;
    private javax.swing.JLabel lblPartidasJugadas;
    private javax.swing.JLabel lblPartidasPerdidas;
    private javax.swing.JLabel lblPass;
    private javax.swing.JLabel lblPass1;
    private javax.swing.JLabel lblPass2;
    private javax.swing.JLabel lblPersonaje;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JLabel lblUsuario1;
    private javax.swing.JLabel logo;
    private javax.swing.JLabel logo1;
    private javax.swing.JLabel logo2;
    private javax.swing.JLabel logo3;
    private javax.swing.JPanel panelAcercaDe;
    private javax.swing.JPanel panelAyuda;
    private javax.swing.JPanel panelBienvenida;
    private javax.swing.JPanel panelEstadisticas;
    private javax.swing.JPanel panelIniciar;
    private javax.swing.JPanel panelPartida;
    private javax.swing.JPanel panelRegistrarse;
    private javax.swing.JSpinner spinCantJugadores;
    private javax.swing.JEditorPane txtAcercaDe;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtDescPartida;
    private javax.swing.JEditorPane txtManualCrearPartida;
    private javax.swing.JEditorPane txtManualCrearUsuario;
    private javax.swing.JEditorPane txtManualJuego;
    private javax.swing.JEditorPane txtManualUnirsePartida;
    private javax.swing.JTextField txtNombrePartida;
    private javax.swing.JPasswordField txtPass;
    private javax.swing.JPasswordField txtPassConfirmar;
    private javax.swing.JPasswordField txtPassIniciar;
    private javax.swing.JTextField txtUsuario;
    private javax.swing.JTextField txtUsuarioEstadisticas;
    private javax.swing.JTextField txtUsuarioIniciar;
    // End of variables declaration//GEN-END:variables

}
